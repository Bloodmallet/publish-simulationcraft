name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: simulationcraftorg/simc

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # TODO: Depends on other CIs?
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Download SimulationCraft
        run: |
          git clone --depth 1 --single-branch https://github.com/simulationcraft/simc.git simc

      - name: Get SimulationCraft version
        run: |
          echo "SIMC_VERSION=$(grep 'SIMC_WOW_VERSION' engine/dbc/generated/client_data_version.inc | sed -E -e 's/#define SIMC_WOW_VERSION \"(.+)\"/\1/')" >> $GITHUB_ENV
        working-directory: ./simc

      - name: Get SimulationCraft version
        run: |
          echo "SIMC_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
        working-directory: ./simc

      - name: Get date
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        working-directory: ./simc

      - name: Build image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME:$SIMC_VERSION-$DATE-$SIMC_HASH
        working-directory: ./simc

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB }}" | docker login docker.pkg.github.com -u ${{ secrets.DOCKERHUBUSER }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
